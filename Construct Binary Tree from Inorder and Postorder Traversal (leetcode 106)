// java


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public TreeNode convert(int[] postorder,int postlow,int posthigh,int[] inorder,int inlow,int inhigh){
        if(postlow>posthigh) return null;
        TreeNode root=new TreeNode(postorder[posthigh]);
        int i=inlow;
        while(inorder[i]!=postorder[posthigh]) i++;
        int leftsize=i-inlow;
        
        root.left=convert(postorder,postlow,postlow+leftsize-1,inorder,inlow,i-1);
        root.right=convert(postorder,postlow+leftsize,posthigh-1,inorder,i+1,inhigh);

        return root;
    }

    public TreeNode buildTree(int[] inorder, int[] postorder) {
        int n=inorder.length;
        return convert(postorder,0,n-1,inorder,0,n-1);
    }
}
