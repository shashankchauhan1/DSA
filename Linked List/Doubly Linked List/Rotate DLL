#include<iostream>
#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
        int data;
        Node* next;
        Node* back;
        
        Node(int d,Node* n,Node* b){
            data=d;
            next=n;
            back=b;
        }
        Node(int d){
            data=d;
            next=nullptr;
            back=nullptr;
        }
};

Node* convertArray(vector<int>&v){
    Node* head=new Node(v[0]);
    Node* prev=head;
    for(int i=1; i<v.size(); i++){
        Node* temp=new Node(v[i]);
        temp->next=nullptr;
        temp->back=prev;
        prev->next=temp;
        prev=temp;
    }
    return head;
}

void printDLL(Node* head){
    Node* temp=head;
    while(temp){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}

int length(Node* head){
    Node* temp=head;
    int count=0;
    while(temp){
        count++;
        temp=temp->next;
    }
    return count;
}

Node* rotate(Node* head){
    Node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    Node* before=temp->back;
    before->next=NULL;
    temp->back=NULL;
    temp->next=head;
    head->back=temp;
    
    return temp;
}

Node* rotateDLL(Node* head,int k){
    if(head==NULL || k==0) return NULL;
    int n=length(head);
    if(k%n==0) return head;
    
    k=k%n;
    while(k){
        head=rotate(head);
        k--;
    }
    return head;
}

int main(){
    vector<int>v={1,2,3,4,5};
    Node* head=convertArray(v);
    printDLL(head);
    cout<<endl;
    int k=2;
    head=rotateDLL(head,k);
    printDLL(head);
    return 0;
}

