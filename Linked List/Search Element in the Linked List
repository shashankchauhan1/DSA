// Search Element in the Linked List

#include<iostream>
#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
        int data;
        Node* next;
        
        Node(int d,Node* n){
            data=d;
            next=n;
        }
        
        Node(int d){
            data=d;
            next=nullptr;
        }

};

Node* convertArray(vector<int>&v){
    Node* head=new Node(v[0]);
    Node* mover=head;
    for(int i=1; i<v.size(); i++){
        Node* temp=new Node(v[i]);
        mover->next=temp;
        mover=temp;
    }
    return head;
}

bool searchElement(Node* head,int target){            // function to check weather the element is in the list or not
    bool check=false;
    Node* temp=head;
    while(temp){
        if(temp->data==target){
            check=true;
            break;
        }
        temp=temp->next;
    }
    return check;
}


int main(){
    vector<int>v={3,4,5,2,1};
    Node* head=convertArray(v);
    
    int target=5;
    cout<<boolalpha<<searchElement(head,target)<<endl;
    return 0;
}
