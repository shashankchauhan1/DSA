// java


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode merge(ListNode l1,ListNode l2){
        ListNode dummy=new ListNode(-1);
        ListNode dn=dummy;
        while(l1!=null && l2!=null){
            if(l1.val<l2.val){
                dn.next=l1;
                dn=dn.next;
                l1=l1.next;
            }
            else{
                dn.next=l2;
                dn=dn.next;
                l2=l2.next;
            }
        }

        while(l1!=null){
            dn.next=l1;
            dn=dn.next;
            l1=l1.next;
        }

        while(l2!=null){
            dn.next=l2;
            dn=dn.next;
            l2=l2.next;
        }
        return dummy.next;
    }

    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0) return null;
        ListNode result=null;
        for(int i=0; i<lists.length; i++){
            result=merge(result,lists[i]);
        }
        return result;
    }
}
