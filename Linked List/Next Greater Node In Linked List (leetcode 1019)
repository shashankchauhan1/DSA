// java

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) {
        List<Integer> list=new ArrayList<>();
        ListNode curr=head;
        while(curr!=null){
            list.add(curr.val);
            curr=curr.next;
        }
        int n=list.size();    
        int[] result=new int[n];

        Stack<Integer> st=new Stack<>();
        for(int i=n-1; i>=0; i--){
            while(!st.isEmpty() && list.get(st.peek()) <= list.get(i) ){
                st.pop();
            }
            if(st.isEmpty()) result[i]=0;
            else result[i]=list.get(st.peek());
            st.push(i);
        }
        return result;
    }
}
