// java


class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> dq=new LinkedList<>();
        ArrayList<Integer> list=new ArrayList<>();
        for(int i=0; i<nums.length; i++){
            if(!dq.isEmpty() && dq.peek()==i-k){
                dq.pollFirst();
            }
            while(!dq.isEmpty() && nums[dq.peekLast()]<=nums[i]){
                dq.pollLast();
            }
            dq.offer(i);
            if(i>=k-1){
                list.add(nums[dq.peek()]);
            }
        }
        int[] result=new int[list.size()];
        for(int i=0; i<list.size(); i++){
            result[i]=list.get(i);
        }
        return result;
    }
}
