// java

class Solution {
    public String reverse(String s){
        StringBuilder sb = new StringBuilder(s);
        sb.reverse();
        return sb+"";
    }
    
    public String toggleBrac(String s){
        StringBuilder sb = new StringBuilder(s);
        for(int i=0; i<sb.length(); i++){
            if(sb.charAt(i)=='(') sb.setCharAt(i,')');
            else if(sb.charAt(i)==')') sb.setCharAt(i,'(');
        }
        return sb+"";
    }
    
    public int priority(char ch){
        if(ch=='^') return 3;
        else if(ch=='*' || ch=='/') return 2;
        else if(ch=='+' || ch=='-') return 1;
        
        return -1;
    }
    
    public String infixToPrefix(String s) {
        
        s=reverse(s);
        s=toggleBrac(s);
        
        int i=0;
        int n=s.length();
        StringBuilder sb=new StringBuilder();
        Stack<Character> st=new Stack<>();
        
        while(i<n){
            if(Character.isLetterOrDigit(s.charAt(i))){
                sb.append(s.charAt(i));
            }
            else if(s.charAt(i)=='(') st.push(s.charAt(i));
            else if(s.charAt(i)==')'){
                while(!st.isEmpty() && st.peek()!='('){
                    sb.append(st.pop());
                }
                if(!st.isEmpty()) st.pop();
            }
            else{
                while(!st.isEmpty() && 
                ( priority(s.charAt(i))<priority(st.peek()) || (priority(s.charAt(i))==priority(st.peek()) && s.charAt(i)=='^') )) {
                    sb.append(st.pop());
                }
                
                st.push(s.charAt(i));
            }
            
            i++;
        }
        
        while(!st.isEmpty()) sb.append(st.pop());
        
        return sb.reverse().toString();
    }
}










