// java

class Solution {
    public int f(int i,int j,int[] values,int[][] dp){
        if(j-i < 2) return 0;

        if(dp[i][j]!=-1) return dp[i][j];

        int score=(int)(1e8);
        for(int k=i+1; k<j; k++){
            int sum = values[i] * values[k] * values[j] + f(i,k,values,dp) + f(k,j,values,dp);
            score=Math.min(score,sum);
        }
        return dp[i][j] = score;
    }

    public int minScoreTriangulation(int[] values) {
        int n=values.length;
        int[][] dp=new int[n][n];
        for(int[] d:dp) Arrays.fill(d,-1);

        return f(0,n-1,values,dp);
    }
}
