// java

class Solution {
    public boolean f(int i,String s,int count,Boolean[][] dp){
        if(count<0) return false;
        if(i==s.length()) return count==0;

        if(dp[i][count]!=null) return dp[i][count];
        
        // it is a opening bracket -> '('
        if(s.charAt(i)=='(') return dp[i][count] = f(i+1,s,count+1,dp);

        // it is a closing bracket -> ')'
        else if(s.charAt(i)==')') return dp[i][count] = f(i+1,s,count-1,dp);
        
        // it is a '*' -> can be '(' or ')' or "" empty.
        return dp[i][count] = f(i+1,s,count+1,dp) || f(i+1,s,count-1,dp) || f(i+1,s,count,dp);
    }

    public boolean checkValidString(String s) {
        if(s.equals("")) return true;
        
        int n=s.length();
        Boolean[][] dp=new Boolean[n][n];

        return f(0,s,0,dp);
    }
}
