// java



class Solution {
    public int lcs(int i,int j,String word1,String word2,int[][] dp){
        if(i<0 || j<0) return 0;
        if(dp[i][j]!=-1) return dp[i][j];

        if(word1.charAt(i)==word2.charAt(j)) return 1+lcs(i-1,j-1,word1,word2,dp);

        return dp[i][j]=Math.max(lcs(i-1,j,word1,word2,dp),lcs(i,j-1,word1,word2,dp));
    }

    public int minDistance(String word1, String word2) {
        int n=word1.length();
        int m=word2.length();
        int[][] dp=new int[n][m];
        for(int[] d:dp) Arrays.fill(d,-1);
        int lcs=lcs(n-1,m-1,word1,word2,dp);

        int c1=n-lcs;
        int c2=m-lcs;

        return c1+c2;
    }
}
