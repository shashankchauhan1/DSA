// java

1> Recursive

class Solution {
    public int climbStairs(int n) {
        if(n<=3) return n;
        return climbStairs(n-1)+climbStairs(n-2);
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2> Memoization

class Solution {
    public int f(int i,int[] dp){
        if(i<=3) return i;
        if(dp[i]!=-1) return dp[i];

        return dp[i]=f(i-1,dp)+f(i-2,dp);
    }

    public int climbStairs(int n) {
        if(n<=3) return n;
        int[] dp=new int[n+1];
        Arrays.fill(dp,-1);
        return f(n,dp);
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3> Tabulation

class Solution {
    public int climbStairs(int n) {
        int[] dp=new int[n+1];
        dp[0]=0;
        dp[1]=1;
        dp[2]=2;
        for(int i=3; i<=n; i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
}
