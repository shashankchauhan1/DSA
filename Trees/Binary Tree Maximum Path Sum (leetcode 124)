// java

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int maxPath(TreeNode root,int[] dia){
        if(root==null) return 0;
        int lh=Math.max(0,maxPath(root.left,dia));
        int rh=Math.max(0,maxPath(root.right,dia));
        dia[0]=Math.max(dia[0],lh+rh+root.val);
        return Math.max(lh,rh)+root.val;
    }

    public int maxPathSum(TreeNode root) {
        int[] dia=new int[1];
        dia[0]=Integer.MIN_VALUE;
        int a=maxPath(root,dia);
        return dia[0];
    }
}
