// java

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void traverseLeaf(TreeNode root, ArrayList<Integer> list){
        if(root==null) return;

        if(root.left==null && root.right==null){
            list.add(root.val);
            return;
        }

        traverseLeaf(root.left,list);
        traverseLeaf(root.right,list);
    }

    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        ArrayList<Integer> list1=new ArrayList<>();
        ArrayList<Integer> list2=new ArrayList<>();

        traverseLeaf(root1,list1);
        traverseLeaf(root2,list2);

        int i=0,j=0;

        if(list1.size()!=list2.size()) return false;

        while(i<list1.size() && j<list2.size()){
            if(!list1.get(i).equals(list2.get(j))) return false;
            i++;
            j++;
        }
        return true;
    }
}
