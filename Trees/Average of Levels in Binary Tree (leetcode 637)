/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public void calculate(TreeNode root, List<Double> result){
        if(root==null) return;
        Queue<TreeNode> q=new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            int size=q.size();
            ArrayList<Integer> list=new ArrayList<>();
            for(int i=0; i<size; i++){
                if(q.peek().left!=null) q.offer(q.peek().left);
                if(q.peek().right!=null) q.offer(q.peek().right);
                list.add(q.poll().val);
            }
            double avg=0.0;
            for(int num:list){
                avg+=num;
            }
            avg=avg/size;
            result.add(avg);
        }
    }

    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> result=new ArrayList<>();
        calculate(root,result);
        return result;
    }
}
