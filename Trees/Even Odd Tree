// java

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        int level = 0;
        if(root.val%2==0) return false;
        q.offer(root);

        while(!q.isEmpty()) {
            int size=q.size();
            ArrayList<Integer> list = new ArrayList<>();
            for (int i=0; i<size; i++) {
                TreeNode node = q.poll();
                list.add(node.val);
                if (node.left != null) q.offer(node.left);
                if (node.right != null) q.offer(node.right);
            }

            int prev = Integer.MIN_VALUE;
            if(level%2==0){
                for(int num:list) {
                    if(num>prev && num%2!=0) {
                        prev=num;
                    } 
                    else return false;
                }
            } 
            else if(level%2!=0) {
                prev=Integer.MAX_VALUE;
                for(int num:list) {
                    if(num<prev && num%2==0) {
                        prev=num;
                    } 
                    else return false;
                }
            }
            level++;
        }
        return true;
    }
}
