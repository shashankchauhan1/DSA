// java

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root==null) return 0;
        Queue<TreeNode> q=new LinkedList<>();
        int maxSum=Integer.MIN_VALUE;
        int level=0;
        int lvl=0;
        q.offer(root);
        while(!q.isEmpty()){
            int size=q.size();
            int sum=0;
            for(int i=0; i<size; i++){
                if(q.peek().left!=null) q.offer(q.peek().left);
                if(q.peek().right!=null) q.offer(q.peek().right);
                sum+=q.poll().val;
            }
            lvl++;
            if(sum>maxSum){
                maxSum=sum;
                level=lvl;
            }
        }
        return level;
    }
}
