// java


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode f(int[] nums,int s,int e){
        if(s>e) return null;
        int max=s;
        for(int i=s; i<=e; i++){
            if(nums[i]>nums[max]) max=i;
        }

        TreeNode root=new TreeNode(nums[max]);
        root.left=f(nums,s,max-1);
        root.right=f(nums,max+1,e);
        return root;
    }

    public TreeNode constructMaximumBinaryTree(int[] nums) {
        int n=nums.length;
        if(n==0) return null;
        if(n==1) return new TreeNode(nums[0]);
        return f(nums,0,n-1);
    }
}
