// java

class Solution {
    public int maximum(int[] piles){
        int max=Integer.MIN_VALUE;
        for(int i=0; i<piles.length; i++){
            max=Math.max(piles[i],max);
        }
        return max;
    }

    public boolean isValid(int[] piles,int speed,int hrs){
        int total=0;
        for(int i=0; i<piles.length; i++){
            total+=Math.ceil((double)piles[i]/(double)speed);
        }
        if(total<=hrs) return true;
        return false;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int s=1;
        int e=maximum(piles);
        int ans=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isValid(piles,mid,h)){
                ans=mid;
                e=mid-1;
            }
            else s=mid+1;
        }
        return ans;
    }
}
