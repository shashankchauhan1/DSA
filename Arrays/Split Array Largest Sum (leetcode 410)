// java

class Solution {
    public static int maximum(int[] nums){
        int max=0;
        for(int i=0; i<nums.length; i++){
            if(nums[i]>max){
                max=nums[i];
            }
        }
        return max;
    }

    public static int sum(int[] nums){
        int sum=0;
        for(int i=0; i<nums.length; i++){
            sum+=nums[i];
        }
        return sum;
    }

    public static boolean isValid(int[] nums,int value,int p){
        int painter=1;
        int walls=0;
        for(int i=0; i<nums.length; i++){
            if(nums[i]+walls<=value){
                walls+=nums[i];
            }
            else{
                painter++;
                walls=nums[i];
            }
        }
        return painter<=p;
    }

    public int splitArray(int[] nums, int k) {
        int s=maximum(nums);
        int e=sum(nums);
        int ans=0;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isValid(nums,mid,k)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
}
