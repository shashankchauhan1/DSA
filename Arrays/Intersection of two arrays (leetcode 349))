// java

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> set1=new HashSet<>();
        HashSet<Integer> set2=new HashSet<>();
        for(int i=0; i<nums1.length; i++){
            set1.add(nums1[i]);
        }

        for(int i=0; i<nums2.length; i++){
            set2.add(nums2[i]);
        }
        ArrayList<Integer> arr=new ArrayList<>();
        for(int el:set1){
            if(set2.contains(el)) arr.add(el);
        }
        int[] array=new int[arr.size()];
        for(int i=0; i<arr.size(); i++){
            array[i]=arr.get(i);
        }
        return array;
    }
}

// leetcode 349 ( C++ )

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        set<int>s1;
        set<int>s2;

        for(auto it:nums1){
            s1.insert(it);
        }
        for(auto it:nums2){
            s2.insert(it);
        }
        vector<int>result;
        for(auto it:s1){
            if(s2.find(it)!=s2.end()){
                result.push_back(it);
            }
        }
        return result;
    }
};
