// java

class Solution {
    public static int maximum(int[] arr){
        int max=Integer.MIN_VALUE;
        for(int i=0; i<arr.length; i++){
            if(arr[i]>max){
                max=arr[i];
            }
        }
        return max;
    }
    public static int isPossible(int[] nums,int mid){
        int totalSum=0;
        for(int i=0; i<nums.length; i++){
            totalSum+=Math.ceil((double)nums[i]/(double)mid);
        }
        return totalSum;
    }
    public int smallestDivisor(int[] nums, int threshold) {
        int max=maximum(nums);
        int s=1;
        int e=max;
        int ans=0;
        while(s<=e){
            int mid=s+(e-s)/2;
            int result=isPossible(nums,mid);
            if(result<=threshold){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
}
