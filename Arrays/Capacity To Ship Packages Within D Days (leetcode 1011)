// java

class Solution {
    public static int maximum(int[] arr){
        int max=Integer.MIN_VALUE;
        for(int i=0; i<arr.length; i++){
            if(arr[i]>max){
                max=arr[i];
            }
        }
        return max;
    }

    public static int sum(int[] arr){
        int sum=0;
        for(int i=0; i<arr.length; i++){
            sum+=arr[i];
        }
        return sum;
    }

    public static boolean isValid(int[] weights,int maxCapacity,int MaxDays){
        int capacity=0;
        int days=1;
        for(int i=0; i<weights.length; i++){
            if(weights[i]+capacity<=maxCapacity){
                capacity+=weights[i];
            }
            else{
                days++;
                capacity=weights[i];
            }
        }

        if(days<=MaxDays) return true;

        return false;
    }

    public int shipWithinDays(int[] weights, int days) {
        int s=maximum(weights);
        int e=sum(weights);
        int ans=0;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(isValid(weights,mid,days)){
                ans=mid;
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return ans;
    }
}
