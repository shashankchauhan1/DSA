1> Creating a Resultant Array

#include<iostream>
using namespace std;

int main() {
    int arr[] = {1, 2, 3, 4, 5};
    int n = sizeof(arr) / sizeof(int);
    int result[n];
    int k = 2;
    k = k % n;
    
    int idx = 0;
    for (int i = n-k; i < n; i++) {
        result[idx++] = arr[i];
    }
    
    for (int i = 0; i < n-k; i++) {
        result[idx++] = arr[i];
    }

    cout << "Original Array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    cout << "Rotated Array: ";
    for (int i = 0; i < n; i++) {
        cout << result[i] << " ";
    }
    cout << endl;

    return 0;
}




2> IN-PLACE rotation

#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int main(){
    vector<int>v={1,2,3,4,5};
    int n=5;
    int k=2;
    reverse(v.begin(),v.end());
    reverse(v.begin(),v.begin()+k);
    reverse(v.begin()+k,v.end());
    
    for(int i=0; i<v.size(); i++){
        cout<<v[i]<<" ";
    }
    return 0;
}
