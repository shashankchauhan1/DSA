// java

class Solution {
    public boolean isValid(int idx,List<Integer> nums,int k){
        
        // check first k half valid or not
        for(int i=idx+1; i<idx+k; i++){
            if(nums.get(i) <= nums.get(i-1)) return false;
        }

        // check second k half valid or not
        for(int i=idx+k+1; i<idx+2*k; i++){
            if(nums.get(i) <= nums.get(i-1)) return false;
        }

        return true;
    }

    public boolean hasIncreasingSubarrays(List<Integer> nums, int k) {
        int n = nums.size();

        // check from every index till the twice of k 
        for(int i=0; i<=n-2*k; i++){
            // if we get true from any of the index means we got our 2 subarrays of size k
            if(isValid(i,nums,k)) return true;  
        }
        return false;
    }
}
