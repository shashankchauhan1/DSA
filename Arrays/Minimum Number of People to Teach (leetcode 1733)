// java

class Solution {
    public boolean communicate(int[] l1,int[] l2){
        for(int num1:l1){
            for(int num2:l2){
                if(num1==num2) return true;
            }
        }
        return false;
    }

    public boolean knows(int[] lang,int l){
        for(int num:lang){
            if(num==l) return true;
        }
        return false;
    }

    public int minimumTeachings(int n, int[][] languages, int[][] friendships) {
        Set<Integer> users=new HashSet<>();

        for(int[] f:friendships){
            int u1=f[0]-1;
            int[] l1=languages[u1];
            int u2=f[1]-1;
            int[] l2=languages[u2];

            if(!communicate(l1,l2)){
                users.add(u1);
                users.add(u2);
            }
        }

        int teach=Integer.MAX_VALUE;
        for(int l=1; l<=n; l++){
            int count=0;
            for(int num:users){
                if(!knows(languages[num],l)) count++;
            }
            teach=Math.min(teach,count);
        }
        return teach==Integer.MAX_VALUE ? 0 : teach;
    }
}
