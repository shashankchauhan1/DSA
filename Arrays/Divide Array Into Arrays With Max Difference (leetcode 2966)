// java

class Solution {
    public int[][] divideArray(int[] nums, int k) {
        Arrays.sort(nums);
        int n=nums.length;
        int[][] ans=new int[n/3][3];
        int z=0;
        for(int i=0; i<n; i+=3){
            int[] a=new int[3];
            for(int j=0; j<3; j++){
                a[j]=nums[i+j];
            }
            if(a[1]-a[0]>k || a[2]-a[1]>k || a[2]-a[0]>k) return new int[0][0];
            ans[z++]=a;
        }

        return ans;
    }
}


---------------- Solution 2

class Solution {
    public int[][] divideArray(int[] nums, int k) {
        Arrays.sort(nums);
        ArrayList<ArrayList<Integer>> result=new ArrayList<>();
        for(int i=0; i<=nums.length-3; i+=3){
            ArrayList<Integer> list=new ArrayList<>();
            int u=nums[i];
            int v=nums[i+1];
            int w=nums[i+2];
            list.add(u);
            list.add(v);
            list.add(w);
            if(v-u>k || w-v>k || w-u>k) return new int[0][0];
            result.add(new ArrayList<>(list));
        }

        int n=result.size();
        int m=3;
        int[][] ans=new int[n][m];

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                ans[i][j]=result.get(i).get(j);
            }
        }

        return ans;
    }
}
