// java


class Solution {

    public void combinations(int i,int[] arr,int target,List<List<Integer>> result,ArrayList<Integer> list){
        if(i==arr.length){
            if(target==0){
                result.add(new ArrayList<>(list));
            }
            return;
        }

        if(arr[i]<=target){
            list.add(arr[i]);
            combinations(i,arr,target-arr[i],result,list);
            list.remove(list.size()-1);
        }
        combinations(i+1,arr,target,result,list);
    }

    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result=new ArrayList<>();
        combinations(0,candidates,target,result,new ArrayList<>());
        return result;
    }
}
