// java


class Solution {

    public void combinations(int idx,int[] arr,int target,List<List<Integer>> result,ArrayList<Integer> list){
        if(target==0){
            result.add(new ArrayList<>(list));
            return;
        }

        for(int i=idx; i<arr.length; i++){
            if(i>idx && arr[i]==arr[i-1]) continue;
            if(arr[i]>target) break;

            list.add(arr[i]);
            combinations(i+1,arr,target-arr[i], result,list);
            list.remove(list.size()-1);
        }
    }

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> result=new ArrayList<>();
        combinations(0,candidates,target,result,new ArrayList<>());
        return result;
    }
}
