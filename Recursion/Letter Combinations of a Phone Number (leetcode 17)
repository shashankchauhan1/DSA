// java

class Solution {
    public void findCombinations(int index,String digits,StringBuilder sb,Map<Character,String> map,List<String> result){

        if(sb.length() == digits.length()){
            result.add(new String(sb));
            return;
        }

        String curr = map.get(digits.charAt(index));

        for(int i=0; i<curr.length(); i++){
            sb.append(curr.charAt(i));
            findCombinations(index+1,digits,sb,map,result);
            sb.deleteCharAt(sb.length()-1);
        }
    }

    public List<String> letterCombinations(String digits) {
        List<String> result = new ArrayList<>();
        Map<Character,String> map = new HashMap<>();
        String[] strs = {"abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        for(int i=0; i<8; i++){
            char ch = (char)(i+2+'0');
            map.put(ch,strs[i]);
        }
        System.out.println(map.get('2'));
        StringBuilder sb = new StringBuilder();
        findCombinations(0,digits,sb,map,result);
        
        return result;
    }
}
