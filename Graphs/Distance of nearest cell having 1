// java (GEEKS FOR GEEKS)

class Pair{
    int row;
    int col;
    int dis;
    Pair(int r,int c,int d){
        this.row=r;
        this.col=c;
        this.dis=d;
    }
}

class Solution {
    public int[][] nearest(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        Queue<Pair> q=new LinkedList<>();
        
        int[][] vis=new int[n][m];
        int[][] dist=new int[n][m];
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]==1){
                    q.offer(new Pair(i,j,0));
                    vis[i][j]=1;
                }
            }
        }
        
        while(!q.isEmpty()){
            Pair p=q.poll();
            int r=p.row;
            int c=p.col;
            int d=p.dis;
            dist[r][c]=d;
            
            int[] delrow={-1,0,1,0};
            int[] delcol={0,1,0,-1};
            
            for(int i=0; i<4; i++){
                int nrow=r+delrow[i];
                int ncol=c+delcol[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0){
                    q.offer(new Pair(nrow,ncol,d+1));
                    vis[nrow][ncol]=1;
                }
            }
            
        }
        
        return dist;
    }
}
