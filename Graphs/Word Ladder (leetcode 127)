// java

class Pair{
    String first;
    int second;
    Pair(String f,int s){
        this.first=f;
        this.second=s;
    }
}

class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Set<String> set=new HashSet<>();
        for(String word:wordList){
            set.add(word);
        }
        set.remove(beginWord);
        Queue<Pair> q=new LinkedList<>();
        q.offer(new Pair(beginWord,1));

        while(!q.isEmpty()){
            Pair p=q.poll();
            String word=p.first;
            int steps=p.second;
            if(word.equals(endWord)) return steps;
            for(int i=0; i<word.length(); i++){
                for(char ch='a'; ch<='z'; ch++){
                    char[] arr=word.toCharArray();
                    arr[i]=ch;
                    String newWord=new String(arr);
                    if(set.contains(newWord)){
                        set.remove(newWord);
                        q.offer(new Pair(newWord,steps+1));
                    }
                }
            }
        }
        return 0;
    }
}
