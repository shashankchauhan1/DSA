// java

class Solution {
    public List<Boolean> checkIfPrerequisite(int numCourses, int[][] prerequisites, int[][] queries) {
        int inm=(int)(1e8);
        int[][] dist=new int[numCourses][numCourses];
        for(int[] d:dist) Arrays.fill(d,inm);

        for(int[] pre:prerequisites){
            int u=pre[0];
            int v=pre[1];
            dist[u][v]=1;
        }

        for(int i=0; i<numCourses; i++) dist[i][i]=0;

        for(int via=0; via<numCourses; via++){
            for(int i=0; i<numCourses; i++){
                for(int j=0; j<numCourses; j++){
                    if(dist[i][via]!=inm && dist[via][j]!=inm){
                        dist[i][j]=Math.min(dist[i][j],dist[i][via] + dist[via][j]);
                    }
                }
            }
        }

        List<Boolean> list=new ArrayList<>();
        for(int[] query:queries){
            int u=query[0];
            int v=query[1];
            if(dist[u][v]!=inm) list.add(true);
            else list.add(false);
        }

        return list;
    }
}
