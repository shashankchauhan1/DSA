// java

class Solution {
    public void f(int r,int c,char[][] board){
        if(r<0 || r>=board.length || c<0 || c>=board[0].length) return;

        if(board[r][c]=='O'){
            board[r][c]='1';

            if(r > 0) f(r-1,c,board);
            if(r+1 < board.length) f(r+1,c,board);
            if(c > 0) f(r,c-1,board);
            if(c+1 < board[0].length) f(r,c+1,board);
        }
    }

    public void solve(char[][] board) {
        int n=board.length;
        int m=board[0].length;

        for(int i=0; i<m; i++){
            f(0,i,board);
            f(n-1,i,board);
        }

        for(int j=0; j<n; j++){
            f(j,0,board);
            f(j,m-1,board);
        }

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(board[i][j]=='1') board[i][j]='O';
                else if(board[i][j]=='O') board[i][j]='X';
            }
        }

    }
}
