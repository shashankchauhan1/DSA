// java

class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int inm=(int)(1e8);
        int[][] dist=new int[n][n];
        for(int[] d:dist) Arrays.fill(d,inm);

        for(int[] edge:edges){
            int u=edge[0];
            int v=edge[1];
            int w=edge[2];
            dist[u][v]=w;
            dist[v][u]=w;
        }

        for(int i=0; i<n; i++) dist[i][i]=0;

        for(int k=0; k<n; k++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    if(dist[i][k]!=inm && dist[k][j]!=inm){
                        dist[i][j]=Math.min(dist[i][j],dist[i][k]+dist[k][j]);
                    }
                }
            }
        }
        
        int cityCnt=inm;
        int city=-1;
        
        for(int i=0; i<n; i++){
            int cnt=0;
            for(int j=0; j<n; j++){
                if(dist[i][j]<=distanceThreshold){
                    cnt++;
                }
            }

            if(cnt<=cityCnt){
                cityCnt=cnt;
                city=i;
            }
        }
        return city;
    }
}
